/ TODO: Wake Python API up in proper manner

div id='r2-home'
  markdown:
    
    ## HLM Pseudo R-squared

    ### Inputs

    Export all your variables into a csv file. The first row has to be the variable names - use any names. To minimize problems, files should be ASCII and should not contain missing values.
    
  input type='file' class='data-hlm-r2' id='file_r2' name='file_r2' onchange='getVariables()' tabindex=7 required='true'
  | Optimization Method: 
  select id='method-r2' tabindex=7 required='true'
    option value=0 selected='selected' Nelder-Mead
    option value=1 Powell
    option value=2 cg
    option value=3 bfgs
  br
  br

  div id='outcome-table'

  br
  button type='submit' id='hlm_r2_btn' name='hlm_r2_btn' tabindex=7 onClick='hlmR2BtnClick()' disabled='true' Calculate

  div
    p class='result-hlm-r2' id='hlm_r2_inputs' name=':inputs'
    p class='result-hlm-r2' id='hlm_r2_warning' name=':warning'

  markdown:

    ### Results

  table cellpadding='10' align='center'
    tr align='right'
      td
        | Level-one R-squared: 
        input type='number' class='result-hlm-r2' name=':level_one_r_2' readonly='true' tabindex=-1
      td
        | Level-two R-squared: 
        input type='number' class='result-hlm-r2' name=':level_two_r_2' readonly='true' tabindex=-1
    tr align='right'
      td
        | Variance between (base model): 
        input type='number' class='result-hlm-r2' name=':vara_b' readonly='true' tabindex=-1
      td
        | Variance between (fitted model): 
        input type='number' class='result-hlm-r2' name=':vara_f' readonly='true' tabindex=-1
    tr align='right'
      td
        | Variance within (base model): 
        input type='number' class='result-hlm-r2' name=':varw_b' readonly='true' tabindex=-1
      td
        | Variance within (fitted model): 
        input type='number' class='result-hlm-r2' name=':varw_f' readonly='true' tabindex=-1
    tr align='right'
      td
        | Base model ICC: 
        input type='number' class='result-hlm-r2' name=':icc_b' readonly='true' tabindex=-1
      td
        | Residual ICC: 
        input type='number' class='result-hlm-r2' name=':icc_f' readonly='true' tabindex=-1
    tr align='right'
      td
        | Clusters analyzed: 
        input type='number' class='result-hlm-r2' name=':n' readonly='true' tabindex=-1
      td
        | Average per cluster: 
        input type='number' class='result-hlm-r2' name=':k' readonly='true' tabindex=-1
    tr align='right'
      td
        | Base model converged?: 
        input type='text' class='result-hlm-r2' name=':convergence_b' readonly='true' tabindex=-1
      td
        | Fitted model converged?: 
        input type='text' class='result-hlm-r2' name=':convergence_f' readonly='true' tabindex=-1
    tr
      td align='center' colspan=2
        button type='reset' tabindex=4 onClick="clearInputs('result-hlm-r2')" Clear

  p name=':warning'
    | Check the results for convergence. If they do not converge, try another optimization method from the drop down menu above.

  markdown:

    **Note**: Average per cluster is harmonic mean. If the ICC differs from the ICC in the ICC procedure, this is because cases with missing data on any variables of interest are deleted prior to all analyses to ensure the base model is comparable with the fitted model.

    ___

script src='hlm_r2.js'
